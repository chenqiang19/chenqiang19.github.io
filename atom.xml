<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>编辑尼撑</title>
  
  <subtitle>学无止境</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-04-03T12:51:40.438Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Qiang Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2021/04/24/hello-world/"/>
    <id>http://yoursite.com/2021/04/24/hello-world/</id>
    <published>2021-04-24T11:04:40.679Z</published>
    <updated>2021-04-03T12:51:40.438Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post-location-source-gt-post-directory"><a href="#Create-a-new-post-location-source-gt-post-directory" class="headerlink" title="Create a new post, location: source-&gt;_post directory"></a>Create a new post, location: source-&gt;_post directory</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure><h3 id="Create-a-new-draft-location-source-gt-drafts-directory"><a href="#Create-a-new-draft-location-source-gt-drafts-directory" class="headerlink" title="Create a new draft, location: source-&gt;_drafts directory"></a>Create a new draft, location: source-&gt;_drafts directory</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new  draft <span class="string">"My New Draft"</span></span></pre></td></tr></table></figure><h3 id="Preview-a-new-draft-shut-down-old-server"><a href="#Preview-a-new-draft-shut-down-old-server" class="headerlink" title="Preview a new draft (shut down old server)"></a>Preview a new draft (shut down old server)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo server --draft</span></pre></td></tr></table></figure><h3 id="publish-a-new-draft-shut-down-old-server"><a href="#publish-a-new-draft-shut-down-old-server" class="headerlink" title="publish a new draft (shut down old server)"></a>publish a new draft (shut down old server)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo publish <span class="string">"My New draft"</span></span></pre></td></tr></table></figure><h3 id="Create-a-new-normal-location-source-gt-c-directory"><a href="#Create-a-new-normal-location-source-gt-c-directory" class="headerlink" title="Create a new normal, location: source-&gt;c directory"></a>Create a new normal, location: source-&gt;c directory</h3><h4 id="normal-is-not-blog-page-it-likes-about-or-contact-us-page"><a href="#normal-is-not-blog-page-it-likes-about-or-contact-us-page" class="headerlink" title="normal is not blog page, it likes about or contact us page."></a>normal is not blog page, it likes about or contact us page.</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"My new Normal"</span></span></pre></td></tr></table></figure><h3 id="Preview-a-new-normal"><a href="#Preview-a-new-normal" class="headerlink" title="Preview a new normal"></a>Preview a new normal</h3><p><a href="http://localhost:4000/c/" target="_blank" rel="noopener">http://localhost:4000/c/</a></p><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Clean-cache"><a href="#Clean-cache" class="headerlink" title="Clean cache"></a>Clean cache</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo clean</span></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><p>If you want to show Chinese, you must make sure md is saved with utf-8</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Spring-Boot-DB</title>
    <link href="http://yoursite.com/2021/04/24/Spring-Boot-DB/"/>
    <id>http://yoursite.com/2021/04/24/Spring-Boot-DB/</id>
    <published>2021-04-24T10:28:31.000Z</published>
    <updated>2021-04-28T16:11:14.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring-Boot连接数据库学习"><a href="#Spring-Boot连接数据库学习" class="headerlink" title="Spring Boot连接数据库学习"></a>Spring Boot连接数据库学习</h2><p>一、Mysql的版本不同依赖和配置信息也不同<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">查看mysql版本</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p******</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&gt; select version();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&gt; exit;</span></pre></td></tr></table></figure><br>添加mysql依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;version&gt;8.0.12&lt;&#x2F;version&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;dependency&gt;</span></pre></td></tr></table></figure><br>数据源配置，在application.properties<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"># 数据源配置，请修改为实际配置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">spring.datasource.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;databasename?serverTimezone&#x3D;Asia&#x2F;Shanghai&amp;zeroDateTimeBehavior&#x3D;convertToNull&amp;autoReconnect&#x3D;true&amp;useSSL&#x3D;false&amp;failOverReadOnly&#x3D;false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">spring.datasource.username&#x3D;bimengine</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">spring.datasource.password&#x3D;fgBQLZpgDaxH7xuu</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">spring.datasource.driver-class-name&#x3D;com.mysql.cj.jdbc.Driver</span></pre></td></tr></table></figure></p><p>问题：SpringBoot配置JDBC连接MySQL数据库的时候遇到了报错：HikariPool-1 - Exception during pool initialization</p><ul><li>检查application.properties-&gt;spring.datasource中的url是否是对的，例如数据库名等</li><li>检查用户名和密码</li><li>mysql5和mysql8使用的driver是不一样的注意区别</li><li>检查时区，url中添加&amp;serverTimezone=UTC</li></ul><p>eg:spring.datasource.url=jdbc:mysql://localhost:3306/movie?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=UTC<br><strong>hikari</strong><br>针对需要手动配置datasource的时候，需要使用手动创建HikariConfig,使用该对象去创建datasource<br>jdbc2.0开始使用DataSource接口来创建连接，对比DriverManager的方式创建连接，DataSource会更优雅一些</p><p><strong>hikari主要连接池属性</strong></p><div class="table-container"><table><thead><tr><th>主要配置</th><th>常用配置</th></tr></thead><tbody><tr><td>dataSourceC;assName</td><td>autoCommit</td></tr><tr><td>jdbcUrl</td><td>connectionTimeout</td></tr><tr><td>username</td><td>idleTimeout</td></tr><tr><td>password</td><td>maLifetime</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">jdbcUrl&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;databasename</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">user&#x3D;test</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">password&#x3D;test</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">dataSource.cachePrepStmts&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">dataSource.prepStmtCacheSize&#x3D;250</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">dataSource.prepStmtCacheSqlLimit&#x3D;2048</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">dataSource.useServerPrepStmts&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">dataSource.useLocalSessionState&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">dataSource.useLocalTransactionState&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">dataSource.rewriteBatchedStatements&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">dataSource.cacheResultSetMetadata&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">dataSource.cacheServerConfiguration&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">dataSource.elideSetAutoCommits&#x3D;true</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">dataSource.maintainTimeStats&#x3D;false</span></pre></td></tr></table></figure><h3 id="二、三种数据库连接方式"><a href="#二、三种数据库连接方式" class="headerlink" title="二、三种数据库连接方式"></a>二、三种数据库连接方式</h3><p><strong>1、准备待操纵的数据库表</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">CREATE DATABASE &#x2F;*!32312 IF NOT EXISTS*&#x2F;&#96;springboot_db&#96; &#x2F;*!40100 DEFAULT CHARACTER SET utf8 *&#x2F;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">USE &#96;springboot_db&#96;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">DROP TABLE IF EXISTS &#96;t_author&#96;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;t_author&#96; (</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;用户ID&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  &#96;real_name&#96; varchar(32) NOT NULL COMMENT &#39;用户名称&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  &#96;nick_name&#96; varchar(32) NOT NULL COMMENT &#39;用户匿名&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  PRIMARY KEY (&#96;id&#96;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;1 DEFAULT CHARSET&#x3D;utf8;</span></pre></td></tr></table></figure><br><strong>2、添加配置文件，如上面在application.yml中的连接池配置</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">spring:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  datasource:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    url: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;springboot_db?useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&amp;useSSL&#x3D;false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    driverClassName: com.mysql.jdbc.Driver</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    username: root</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    password: root</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    type: com.alibaba.druid.pool.DruidDataSource</span></pre></td></tr></table></figure><br><strong>3、建立与数据库对应的POJO类</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public class Author &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    private Long id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    private String realName;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    private String nickName;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F; SET和GET方法略</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></p><p><strong>方式一：与JdbcTemplate集成</strong><br><strong>Spring boot依赖:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">       &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">       &lt;artifactId&gt;spring-boot-starter-jdbc&lt;&#x2F;artifactId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;dependency&gt;</span></pre></td></tr></table></figure><br><strong>引入Junit测试starter:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">       &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">       &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">       &lt;scope&gt;test&lt;&#x2F;scope&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;dependency&gt;</span></pre></td></tr></table></figure><br><strong>DAO接口:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public interface AuthorDao &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    int add(Author author);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    int update(Author author);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    int delete(Long id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    Author findAuthor(Long id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    List&lt;Author&gt; findAuthorList();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><br><strong>DAO接口实现:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">@Repository</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">public class AuthorDaoJdbcTemplateImpl implements AuthorDao&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    @Autowired</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    private NamedParameterJdbcTemplate jdbcTemplate;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    @Override</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    public int add(Author author) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        String sql &#x3D; &quot;insert into t_author(id,real_name,nick_name) &quot; +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">                &quot;values(:id,:realName,:nickName)&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        Map&lt;String, Object&gt; param &#x3D; new HashMap&lt;&gt;();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        param.put(&quot;id&quot;,author.getId());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        param.put(&quot;realName&quot;, author.getRealName());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        param.put(&quot;nickName&quot;, author.getNickName());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        return (int) jdbcTemplate.update(sql, param);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    @Override</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    public int update(Author author) &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        return 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    @Override</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    public int delete(Long id) &#123;    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        return 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    @Override</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    public Author findAuthor(Long id) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        return null;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    @Override</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">    public List&lt;Author&gt; findAuthorList() &#123;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">          return null;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><br><strong>通过JUit测试:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">@RunWith(SpringJUnit4ClassRunner.class)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">@SpringBootTest(classes &#x3D; BootApplication.class)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">public class AuthorDaoTest &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    @Autowired</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    private AuthorDao authorDao;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    @Test</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    public void testInsert() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Author author &#x3D; new Author();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        author.setId(1L);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        author.setRealName(&quot;莫言&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        author.setNickName(&quot;疯子&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        authorDao.add(author);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        System.out.println(&quot;插入成功！&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></p><h3 id="方式二-与JPA集成"><a href="#方式二-与JPA集成" class="headerlink" title="方式二: 与JPA集成"></a>方式二: 与JPA集成</h3><p><strong>引入starter：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;&#x2F;artifactId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;dependency&gt;</span></pre></td></tr></table></figure><br><strong>对POJO类增加Entity的注解，并指定表命(默认为author)，然后制定ID及其生成策略</strong><br><strong>注: 可以查看JPA知识</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">import javax.persistence.Entity;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">import javax.persistence.GeneratedValue;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">import javax.persistence.Id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">@Entity(name &#x3D; &quot;t_author&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">public class Author &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    @Id</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    @GeneratedValue</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    private Long id;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    private String realName;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    private String nickName;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F; SET和GET方法略</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><br><strong>接口应该继承JpaRepository</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">public interface AuthorRepository extends JpaRepository&lt;Author, Long&gt; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    public Optional&lt;Author&gt; findById(Long userId);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    @Query(&quot;select au from com.guxf.domain.Author au where nick_name&#x3D;:nickName&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    public List&lt;Author&gt; queryByNickName(@Param(&quot;nickName&quot;) String nickName);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><br><strong>测试代码:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">@RunWith(SpringJUnit4ClassRunner.class)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">@SpringBootTest(classes &#x3D; BootApplication.class)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">public class AuthorDaoTestJPA &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    @Autowired</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    private AuthorRepository authorRepository;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    @Test</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    public void testQuery() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        List&lt;Author&gt; authorList &#x3D; authorRepository.queryByNickName(&quot;疯子&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        assertTrue(authorList.size() &gt; 0);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        System.out.println(&quot;成功！&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></p><h3 id="方法三-与MyBatis集成"><a href="#方法三-与MyBatis集成" class="headerlink" title="方法三: 与MyBatis集成"></a>方法三: 与MyBatis集成</h3><p><strong>引入starter: Spring没有定义该starter的版本，所以需要自己指定version</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &lt;groupId&gt;org.mybatis.spring.boot&lt;&#x2F;groupId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &lt;artifactId&gt;mybatis-spring-boot-starter&lt;&#x2F;artifactId&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &lt;version&gt;1.1.1&lt;&#x2F;version&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;dependency&gt;</span></pre></td></tr></table></figure><br><strong>MyBatis一般可以通过XML或者注解的方式来指定SQL</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">spring:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  datasource:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    url: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;springboot_db?useUnicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8&amp;useSSL&#x3D;false</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    driverClassName: com.mysql.jdbc.Driver</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    username: root</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    password: root</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    type: com.alibaba.druid.pool.DruidDataSource</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">mybatis:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  #config-locations: mybatis&#x2F;mybatis-config.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  mapper-locations: com&#x2F;guxf&#x2F;mapper&#x2F;*.xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  type-aliases-package: com.guxf.mapper.AuthorMapper</span></pre></td></tr></table></figure><br><strong>编写mapper对应的接口:</strong><br>@Mapper<br>public interface AuthorMapper extends BaseMapper<Author> {</Author></p><pre><code>public Long insertAuthor(Author author);public void updateAuthor(Author author);public Author queryById(Long id);</code></pre><p>}<br><strong>配置Mapper的XML文件:</strong><br>&lt;?xml version=”1.0” encoding=”UTF-8” ?&gt;<br>&lt;!DOCTYPE mapper PUBLIC “-//mybatis.org//DTD Mapper 3.0//EN” “<a href="http://mybatis.org/dtd/mybatis-3-mapper.dtd" target="_blank" rel="noopener">http://mybatis.org/dtd/mybatis-3-mapper.dtd</a>“ &gt;</p><p><mapper namespace="com.guxf.mapper.AuthorMapper"><br>    <!-- 此处需要注意的是，由于我们数据库定义的id存储类型为intbig,但是我们的Entity中Id是Long --><br>    <!-- 前面的两种方式插入没问题，此处报了数据库类型异常 --><br>    <!-- 所以数据库的ID类型改为了Varchar --><br>    <resultMap id="authorMap" type="com.guxf.domain.Author"><br>        <id column="id" property="id" jdbctype="VARCHAR"><br>        <result column="real_name" property="realName" jdbctype="VARCHAR"><br>        <result column="nick_name" property="nickName" jdbctype="VARCHAR">    </result></result></id></resultMap></mapper></p><pre><code>&lt;sql id=&quot;base_column&quot;&gt;    id,real_name,nick_name&lt;/sql&gt;&lt;insert id=&quot;insertAuthor&quot; parameterType=&quot;com.guxf.domain.Author&quot;&gt;    INSERT INTO    t_author(    &lt;include refid=&quot;base_column&quot; /&gt;    )    VALUE    (#{id},#{realName},#{nickName})&lt;/insert&gt;&lt;update id=&quot;updateAuthor&quot; parameterType=&quot;com.guxf.domain.Author&quot;&gt;    UPDATE t_author    &lt;set&gt;        &lt;if test=&quot;realName != null&quot;&gt;            real_name = #{realName},        &lt;/if&gt;        &lt;if test=&quot;nickName != null&quot;&gt;            nick_name = #{nickName},        &lt;/if&gt;    &lt;/set&gt;    WHERE id = #{id}&lt;/update&gt;&lt;select id=&quot;queryById&quot; parameterType=&quot;Long&quot; resultMap=&quot;authorMap&quot;&gt;    SELECT id,    &lt;include refid=&quot;base_column&quot;&gt;&lt;/include&gt;    FROM t_author    WHERE id = #{id}&lt;/select&gt;</code></pre><p>&lt;/mapper&gt;<br><strong>测试类代码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">@RunWith(SpringJUnit4ClassRunner.class)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">@SpringBootTest(classes &#x3D; BootApplication.class)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">public class AuthorDaoTestMybatis &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    @Autowired</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    private AuthorMapper mapper;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    @Test</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    public void testInsert() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        Author author &#x3D; new Author();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        author.setId(4L);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        author.setRealName(&quot;唐钰&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        author.setNickName(&quot;小宝&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        mapper.insertAuthor(author);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        System.out.println(&quot;成功!&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    @Test</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    public void testMybatisQuery() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        Author author &#x3D; mapper.queryById(1L);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        assertNotNull(author);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        System.out.println(author);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    @Test</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    public void testUpdate() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        Author author &#x3D; mapper.queryById(2L);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        author.setNickName(&quot;月儿&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        author.setRealName(&quot;林月如&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        mapper.updateAuthor(author);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></p><p><em>mybatis @SELECT注解的动态拼写SQL</em><br>eg:如果要在查询条件中判断条件是否为空，如判断startNo, pageSize不为空<br>在XML中配置如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;when test&#x3D;&#39;startNo!&#x3D;null and pageSize !&#x3D; null &#39;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  LIMIT #&#123;startNo&#125;,#&#123;pageSize&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;when&gt;</span></pre></td></tr></table></figure><br><strong>使用@SELECT</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">@Select(&quot;&lt;script&gt;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">+&quot;select * from mi_taobao where 1&#x3D;1&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">+&quot;&lt;if test&#x3D;&#39;status !&#x3D; null&#39;&gt;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">+&quot;and status &#x3D; #&#123;status&#125;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">+&quot;&lt;&#x2F;if&gt;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">+&quot;&lt;&#x2F;script&gt;&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">public List&lt;Taobao&gt; getTaobao(@Param(&quot;status&quot;) Integer status);</span></pre></td></tr></table></figure><br>问题: Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named ‘status’ in ‘class java.lang.Interger’<br>参数属性不一致导致，需要加@Param(“xxx”),一般两个参数必须添加@Param，一个参数可以不加</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Spring-Boot连接数据库学习&quot;&gt;&lt;a href=&quot;#Spring-Boot连接数据库学习&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot连接数据库学习&quot;&gt;&lt;/a&gt;Spring Boot连接数据库学习&lt;/h2&gt;&lt;p&gt;一、Mysq
      
    
    </summary>
    
    
      <category term="Cloud Compute" scheme="http://yoursite.com/categories/Cloud-Compute/"/>
    
    
      <category term="Cloud Compute" scheme="http://yoursite.com/tags/Cloud-Compute/"/>
    
      <category term="Spring-Boot-DB" scheme="http://yoursite.com/tags/Spring-Boot-DB/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Boot-Learn</title>
    <link href="http://yoursite.com/2021/04/24/Spring-Boot-Learn/"/>
    <id>http://yoursite.com/2021/04/24/Spring-Boot-Learn/</id>
    <published>2021-04-24T08:44:19.000Z</published>
    <updated>2021-04-24T08:45:59.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring-Boot学习"><a href="#Spring-Boot学习" class="headerlink" title="Spring Boot学习"></a>Spring Boot学习</h2><h3 id="一、创建Spring-Boot新项目"><a href="#一、创建Spring-Boot新项目" class="headerlink" title="一、创建Spring Boot新项目"></a>一、创建Spring Boot新项目</h3><p>创建工具IDEA</p><ul><li>File-&gt;New-&gt;project-&gt;Spring Initialize-&gt;Next</li><li>填写Group、Artifact、Language、Java Version、Version、Name、Description</li><li>Next-&gt;Web-&gt;Spring Web(随spring boot版本不同而不同)-&gt;Next-&gt;Finish<br><img src="/2021/04/24/Spring-Boot-Learn/1.png" alt="new"></li><li>配置环境File-&gt;Settings-&gt;Build,Execution,Deployment-&gt;Maven<ul><li>Maven home directory #apache-maven-3.6.3的下载目录</li><li>User settings file #apache-maven-3.6.3的配置文件，在其目录的conf下</li><li>Local repository #一般在apache-maven-3的配置中已经指定，依赖的下载路径<br><img src="/2021/04/24/Spring-Boot-Learn/2.png" alt="new"><br>运行程序Application.java<br>浏览器访问：http:localhost:8080<br>会发现如下的错误，前后端没有做映射，后端给出的默认界面<br><img src="/2021/04/24/Spring-Boot-Learn/3.png" alt="new"></li></ul></li></ul><p>前后端分离：前、后端通过RESTful API传递JSON数据进行交流。后端不涉及前端界面的内容，有别于JSP<br><strong>目前RESTful方式的前后端访问方式比较流行，如openstack提供了底层RESTful API接口给后端访问</strong></p><p>前后端对接：前端调用前端的服务器Nginx,后端调用后端的服务器Tomcat<br>反向代理: 前端请求通过前端服务器转发给后端，只需知道后端开放的接口，无需知道如何实现<br>*为了保护服务器，不保留真实地址</p><p>重点:<br>组件的依赖关系、版本的确认</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Spring-Boot学习&quot;&gt;&lt;a href=&quot;#Spring-Boot学习&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot学习&quot;&gt;&lt;/a&gt;Spring Boot学习&lt;/h2&gt;&lt;h3 id=&quot;一、创建Spring-Boot新项目&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="Cloud Compute" scheme="http://yoursite.com/categories/Cloud-Compute/"/>
    
    
      <category term="Cloud Compute" scheme="http://yoursite.com/tags/Cloud-Compute/"/>
    
      <category term="Spring-Boot-Learn" scheme="http://yoursite.com/tags/Spring-Boot-Learn/"/>
    
  </entry>
  
  <entry>
    <title>Vue-Learn</title>
    <link href="http://yoursite.com/2021/04/24/Vue-Learn/"/>
    <id>http://yoursite.com/2021/04/24/Vue-Learn/</id>
    <published>2021-04-24T02:23:43.000Z</published>
    <updated>2021-04-24T02:32:04.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue学习"><a href="#Vue学习" class="headerlink" title="Vue学习"></a>Vue学习</h2><h3 id="一、Vue安装"><a href="#一、Vue安装" class="headerlink" title="一、Vue安装"></a>一、Vue安装</h3><p><strong>安装Vue CLI脚手架需要</strong><br>1、node, 安装前先查看是否已安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;node -v</span></pre></td></tr></table></figure><br>2、npm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;npm -v</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">#如未安装</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&gt;npm -g install npm</span></pre></td></tr></table></figure><br>安装vue-cli<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&gt;npm install -g vue-cli #这是2.x版本，3.x版本安装命令会不一样</span></pre></td></tr></table></figure><br>可能遇到的错误</p><h2 id><a href="#" class="headerlink" title></a><img src="/2021/04/24/Vue-Learn/1.png" alt="vue"></h2><p><strong>构建项目</strong><br>如果前面安装时执行了npm install则直接执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">cd xxx_project_name</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm run dev</span></pre></td></tr></table></figure><br><img src="/2021/04/24/Vue-Learn/2.png" alt="exec"><br><img src="/2021/04/24/Vue-Learn/3.png" alt="exec"><br>项目的构建也可以使用IDEA-&gt;IntelliJ IDEA<br>目录说明, <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> 访问初始界面<br><img src="/2021/04/24/Vue-Learn/5.png" alt="prostr"><br><img src="/2021/04/24/Vue-Learn/6.png" alt="prostr"><br><a href="https://www.cnblogs.com/irenehanb/p/10967834.html" target="_blank" rel="noopener">参考</a></p><p><strong>关键文件</strong><br>index.html, 定义单页面，编写的其他内容都在此处的div中展示<br>App.vue， 根目录，包括script脚本和路由容器<br>main.js，将App，html，和路由整合到一起<br><img src="/2021/04/24/Vue-Learn/4.png" alt="prostr"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Vue学习&quot;&gt;&lt;a href=&quot;#Vue学习&quot; class=&quot;headerlink&quot; title=&quot;Vue学习&quot;&gt;&lt;/a&gt;Vue学习&lt;/h2&gt;&lt;h3 id=&quot;一、Vue安装&quot;&gt;&lt;a href=&quot;#一、Vue安装&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="Cloud Compute" scheme="http://yoursite.com/categories/Cloud-Compute/"/>
    
    
      <category term="Cloud Compute" scheme="http://yoursite.com/tags/Cloud-Compute/"/>
    
      <category term="Vue-Learn" scheme="http://yoursite.com/tags/Vue-Learn/"/>
    
  </entry>
  
  <entry>
    <title>Vim-Summary</title>
    <link href="http://yoursite.com/2021/04/14/Vim-Summary/"/>
    <id>http://yoursite.com/2021/04/14/Vim-Summary/</id>
    <published>2021-04-14T13:17:54.000Z</published>
    <updated>2021-04-14T13:17:54.769Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Cambricon-Learning</title>
    <link href="http://yoursite.com/2021/04/14/Cambricon-Learning/"/>
    <id>http://yoursite.com/2021/04/14/Cambricon-Learning/</id>
    <published>2021-04-14T13:17:36.000Z</published>
    <updated>2021-04-14T13:17:36.085Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Tensorflow-Source-Code-Learning</title>
    <link href="http://yoursite.com/2021/04/14/Tensorflow-Source-Code-Learning/"/>
    <id>http://yoursite.com/2021/04/14/Tensorflow-Source-Code-Learning/</id>
    <published>2021-04-14T13:16:49.000Z</published>
    <updated>2021-04-14T13:58:22.708Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Tensorflow-framework核心"><a href="#Tensorflow-framework核心" class="headerlink" title="Tensorflow framework核心"></a>Tensorflow framework核心</h3><p>1、前端接口语言的支持（通过swig实现其他语言与C/C++的编写的程序进行连接，如：Java,Python）<br>2、前后端session的管理<br>3、graph的构建、分裂、运行和执行<br>4、Operation的Register和Run<br>5、模块间的通信，本地和分布式两种<br>6、本地和分布式运行模式<br>7、CPU、GPU和TPU等异构设备的支持</p><p>整个框架以C API为主，分为前、后端<br>前端负责，graph的构建、并传递给master<br>后端负责提供运行时环境，分为4层<br>1、运行时：图的接受，剪枝，编排等操作<br>2、计算层：提供op算子的内核实现<br>3、通信层：组件间通信<br>4、设备层：异构设备的支持</p><h4 id="Tensorflow-图的构造和执行是相互分离的，大体流程为："><a href="#Tensorflow-图的构造和执行是相互分离的，大体流程为：" class="headerlink" title="Tensorflow 图的构造和执行是相互分离的，大体流程为："></a>Tensorflow 图的构造和执行是相互分离的，大体流程为：</h4><p>1、图的构造：用于在Client端使用前端的多语言编程接口（python、java）添加算子，完成计算图的构造<br>2、图的传递：Client开启Session，通过它建立和Master之间的连接，执行Session Run,将构建好的graph序列化为graphDef后，以Protobuf传给Master<br>3、图的剪枝：Master根据Session.run()传递的fetch和feeds列表，反向遍历全图，找到最小依赖子图，实施剪枝<br>4、图的分裂：Master将最小子图分裂为多个Graph Partition并注册到多个Worker上<br>5、图二次分裂：Worker根据当前的硬件资源，如CPU、GPU、TPU和MLU，将Graph Partition按照op算子设备约束规范二次分裂到不同设备<br>6、图的运行：每个设备，Worker按照op在kernel中的实现完成op运算</p><h4 id="Tensorflow-源码编译"><a href="#Tensorflow-源码编译" class="headerlink" title="Tensorflow 源码编译"></a>Tensorflow 源码编译</h4><p>使用bazel编译，得到pywrap_tensorflow_internal.py 对接上层python调用加载_pywrap_tensorflow_internal.so动态库<br>得到pywrap_tensorflow_internal.cc 对接底层c API,注册了一个函数符号表，实现python接口和c接口的映射</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Tensorflow-framework核心&quot;&gt;&lt;a href=&quot;#Tensorflow-framework核心&quot; class=&quot;headerlink&quot; title=&quot;Tensorflow framework核心&quot;&gt;&lt;/a&gt;Tensorflow framework
      
    
    </summary>
    
    
      <category term="Tensorflow" scheme="http://yoursite.com/categories/Tensorflow/"/>
    
    
      <category term="Tensorflow" scheme="http://yoursite.com/tags/Tensorflow/"/>
    
  </entry>
  
  <entry>
    <title>C-Plus-Plus-Summary</title>
    <link href="http://yoursite.com/2021/04/14/C-Plus-Plus-Summary/"/>
    <id>http://yoursite.com/2021/04/14/C-Plus-Plus-Summary/</id>
    <published>2021-04-14T13:16:28.000Z</published>
    <updated>2021-04-14T13:16:28.010Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Cloud-Compute</title>
    <link href="http://yoursite.com/2021/04/14/Cloud-Compute/"/>
    <id>http://yoursite.com/2021/04/14/Cloud-Compute/</id>
    <published>2021-04-14T13:16:04.000Z</published>
    <updated>2021-04-14T13:16:04.698Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Deep-Recognition-Compute</title>
    <link href="http://yoursite.com/2021/04/14/Deep-Recognition-Compute/"/>
    <id>http://yoursite.com/2021/04/14/Deep-Recognition-Compute/</id>
    <published>2021-04-14T13:15:50.000Z</published>
    <updated>2021-04-14T13:15:50.138Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Deep-Learning</title>
    <link href="http://yoursite.com/2021/04/14/Deep-Learning/"/>
    <id>http://yoursite.com/2021/04/14/Deep-Learning/</id>
    <published>2021-04-14T13:14:54.000Z</published>
    <updated>2021-04-14T13:14:54.898Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Docker-Netork-Container</title>
    <link href="http://yoursite.com/2021/04/03/Docker-Netork-Container/"/>
    <id>http://yoursite.com/2021/04/03/Docker-Netork-Container/</id>
    <published>2021-04-03T09:14:13.000Z</published>
    <updated>2021-04-14T13:09:19.203Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker容器间通信"><a href="#Docker容器间通信" class="headerlink" title="Docker容器间通信"></a>Docker容器间通信</h3><p>容器间的网络是相互独立的，要在容器间通信，必须学习网络的相关知识<br>docker-compose 创建的各个容器都会产生自己的一个默认网�?所以要在不同的容器间通信，需要自定义公用网络，eg. mysql容器+nacos容器</p><p>查看 默认网络<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ docker network ls</span></pre></td></tr></table></figure></p><p>几种网络模式�?1. bridge: 为每一个容器分配、设置IP�?并将容器链接到docker0的虚拟网�?默认)�?2. host: 不会虚拟出自己的网卡，使用宿主的IP和端口；</p><ol><li>none:容器拥有独立的namespace, 但没有对其进行设置；</li><li>container: 容器不会创建自己的网卡，和指定的容器共享IP、端口�?<br>**bridge: Docker守护进程创建一个虚拟以太网桥docker0，新建容器自动桥接到该接�?附加在其上的网卡可以自动转发数据�?<br>默认，守护进程创建一对对等虚拟设备接口veth pair,一个设置为eth0,另一个设置为vethxxx，实现宿主机与容器的通信<br>——veth pari技�?—-<br>veth pair技术特性：保证如论哪一个veth接收到网络报文，都会将报文传输给另一�?<br>宿主机查看网卡信�?``` bash<br>$ ip addr<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Docker 容器的IP和Gateway查看 NetworkSettings</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96; bash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ docker inspect 容器ID|容器�?</span></pre></td></tr></table></figure></li></ol><p>Docker 查看所有bridge模式下的容器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ docker network inspect bridge</span></pre></td></tr></table></figure><br>host: 容器可以直接使用宿主机的IP与外界进行通信，无需额外的NAT转换<br>缺点：容器的网络缺少了隔离�?<br>none: 禁用网络功能，只有local接口，可以根据需求做更多的网络定�?<br>container: Docker中较为特别的网络模式�?-net container:已运行的容器名称|ID<br>两个容器共享一个网络栈，使用localhost高效快速通信</p><p>容器间通信，Docker1.1.0开始，docker daemon内嵌了一个DNS server,使用器可以直接通过容器名通信<br>需求：1、创建容器时使用—name命名�?、只能在自定义的网络中使用�?创建自定义网�?docker network create “common_network” —driver “network type(bridge|host|none)”</p><p>连接网络: docker network connect 网络名称 容器名称<br>断开网络: docker network disconnect 网络名称 容器名称<br>移除网络: docker network rm 网络名称</p><p>查看容器之间是否可以ping�?1、查看容器的具体IP<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ docker network inspect bridge</span></pre></td></tr></table></figure></p><p>2、测试容器是否可ping�?``` bash<br>$ docker exec -it contain_1 ping contain_2IP(192.1.19.0)<br>$ docker exec -it contain_1 ping contain_2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">3、容器使用相同的网络</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96; bash</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">$ docker run -di --name contain_name_1 --net custom_network image</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">$ docker run -di --name contain_name_2 --net custom_network image</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">$ docker network inspect custom_network #查看上述两个容器的IP信息</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">参�? &lt;https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;212772001&gt;</span></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Docker容器间通信&quot;&gt;&lt;a href=&quot;#Docker容器间通信&quot; class=&quot;headerlink&quot; title=&quot;Docker容器间通信&quot;&gt;&lt;/a&gt;Docker容器间通信&lt;/h3&gt;&lt;p&gt;容器间的网络是相互独立的，要在容器间通信，必须学习网络的相关知识&lt;b
      
    
    </summary>
    
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>MySQL-Install-In-Windows10</title>
    <link href="http://yoursite.com/2021/04/03/MySQL-Install-In-Windows10/"/>
    <id>http://yoursite.com/2021/04/03/MySQL-Install-In-Windows10/</id>
    <published>2021-04-03T07:45:50.000Z</published>
    <updated>2021-04-24T08:54:19.304Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MySQL8-Install-in-Windows10"><a href="#MySQL8-Install-in-Windows10" class="headerlink" title="MySQL8 Install in Windows10"></a>MySQL8 Install in Windows10</h3><p>1 Use mysql-installer-community-8.0.23.0.msi to install<br>download url: <a href="https://www.mysql.com/cn/downloads/" target="_blank" rel="noopener">https://www.mysql.com/cn/downloads/</a>  </p><p>Step1: choise MySQL Community<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_0.png" alt="DOWNLOAD"><br>Step2: choise System<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_1.png" alt="DOWNLOAD"><br>Step3: choise Custom<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_2.png" alt="DOWNLOAD"><br>Step3: choise install product<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_3.png" alt="DOWNLOAD"><br>Step3: next.. next..<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_4.png" alt="DOWNLOAD"><br>Step4: input login in password<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_5.png" alt="DOWNLOAD"><br>Step5: drop Start the MySQL Server at System Startup<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_6.png" alt="DOWNLOAD"><br>Step6: Execute<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_7.png" alt="DOWNLOAD"><br>Step7: Finish!<br><img src="/2021/04/03/MySQL-Install-In-Windows10/mysql_8.png" alt="DOWNLOAD">  </p><p>Verity:<br>2 Add environment:compute(right click)-&gt;property-&gt;advance property-&gt;env variable<br>2.1 MYSQL_HOME-&gt;C:\Program Files\MySQL\MySQL Server 8.0<br>2.2 Path: Add-&gt;%MYSQL_HOME%\bin  </p><p>cmd(Administrator)-&gt;mysql —port=3306 -uroot -pxxxxxx  </p><p>3 if step7 is unsuccessful!  Starting the server error!<br>The configuration for MySQL Server 8.0.23 has failed  </p><p>3.1 remove mysql install<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysqld --remove mysql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mysqld --remove mysql80</span></pre></td></tr></table></figure></p><p>3.2 init<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user&#x3D;mysql</span></pre></td></tr></table></figure></p><p>3.3 create server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysqld --install msyql</span></pre></td></tr></table></figure></p><p>3.4 start server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">net start mysql</span></pre></td></tr></table></figure></p><p>3.5 login in<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysql -uroot -p (passward is empty, you kan search passward from $MSYQLPATH&#x2F;data&#x2F;***.err)</span></pre></td></tr></table></figure><br>eg. C:\\Program Files\\MySQL\\MySQL Server 8.0\\data\\DESKTOP-PGENXXX.err</p><p>4 You can install Mysql with zip package, but you need configuration by yourself<br>download url: <a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a><br>4.1 unzip<br>4.2 touch my.ini file,<br>[mysqld]<br>port=3306<br>basedir=D:\\xxxx\\xxxx #(zip path, aim to load my.ini file)<br>datadir=D:\\xxxx\\xxxx\data #(storage mysql data)<br>max_connections=200<br>character-set-server=utf8<br>default-storage-engine=INNODB  #(default storage engine)</p><p>[mysql]<br>default-character-set=utf8<br>[client]<br>port=3306<br>default-character-set=utf8</p><p>4.3 install mysql<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user&#x3D;mysql --console #(console will show default login in passward)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mysqld -install</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">net start mysql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">mysql -uroot -pxxxx</span></pre></td></tr></table></figure></p><p>5 reset mysql passward<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">net stop mysql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">mysqld --console --skip-grant-tables --shared-memory</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">use mysql;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">update user set authentication_string&#x3D;&#39;&#39; where user&#x3D;&#39;root&#39;;  #(passward set null)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">net start mysql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">alter user &#39;root&#39;@&#39;localhost&#39; identified with mysql_native_password BY &#39;xxxxxx&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">flush privileges;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">exit;</span></pre></td></tr></table></figure></p><p>如果执行mysqld install的时候，提示已有安装的版本，但是本地的目录已经删除了<br>可以使用如下的方法删除<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">1、mysqld -remove mysql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">or</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">2、sc query mysql &amp;&amp; sc delete mysql</span></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;MySQL8-Install-in-Windows10&quot;&gt;&lt;a href=&quot;#MySQL8-Install-in-Windows10&quot; class=&quot;headerlink&quot; title=&quot;MySQL8 Install in Windows10&quot;&gt;&lt;/a&gt;MySQL
      
    
    </summary>
    
    
      <category term="SoftWare" scheme="http://yoursite.com/categories/SoftWare/"/>
    
    
      <category term="SoftWare" scheme="http://yoursite.com/tags/SoftWare/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu18.04_RabbitMQ_Install</title>
    <link href="http://yoursite.com/2020/11/14/Ubuntu18-04-RabbitMQ-Install/"/>
    <id>http://yoursite.com/2020/11/14/Ubuntu18-04-RabbitMQ-Install/</id>
    <published>2020-11-14T10:31:12.000Z</published>
    <updated>2021-04-14T14:02:31.308Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RabbitMQ-Install-in-Ubuntu18-04"><a href="#RabbitMQ-Install-in-Ubuntu18-04" class="headerlink" title="RabbitMQ Install in Ubuntu18.04"></a>RabbitMQ Install in Ubuntu18.04</h3><ol><li>set configuration</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">echo &quot;deb https:&#x2F;&#x2F;dl.bintray.com&#x2F;rabbitmq&#x2F;debian trusty main&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;bintray.rabbitmq.list</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">echo &quot;deb http:&#x2F;&#x2F;packages.erlang-solutions.com&#x2F;ubuntu trusty contrib&quot; | sudo tee -a &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;erlang_solutions.list</span></pre></td></tr></table></figure><p>2.import key</p><p>wget -c -O- <a href="http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc" target="_blank" rel="noopener">http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc</a> | sudo apt-key add -</p><p>wget -O- <a href="https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc" target="_blank" rel="noopener">https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc</a> |sudo apt-key add -</p><p>3.Install erlang and RabbitMQ  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo apt-get update  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo apt-get install erlang-nox  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo apt-get install rabbitmq-server</span></pre></td></tr></table></figure><p>4.After installed��RabbitMQ has been started��these are some command of RabbitMQ��<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo service rabbitmq-server start # start  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo service rabbitmq-server stop # stop  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo service rabbitmq-server restart # restart  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">sudo service rabbitmq-server status # show current status</span></pre></td></tr></table></figure></p><p>5.RabbitMQ manager,it is a RabbitMQ;’s WEB tool</p><h1 id="if-you-want-to-use-web-to-manage-RabbitMQ-you-must-to-active-follow-command"><a href="#if-you-want-to-use-web-to-manage-RabbitMQ-you-must-to-active-follow-command" class="headerlink" title="if you want to use web to manage RabbitMQ, you must to active follow command"></a>if you want to use web to manage RabbitMQ, you must to active follow command</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">sudo rabbitmq-plugins enable rabbitmq_management  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sudo systemctl restart rabbitmq-server #restart rabbitmq server </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">#browser input��http:&#x2F;&#x2F;localhost:15672 #vetify RabbitMQ manager</span></pre></td></tr></table></figure><p>6.create user and autority<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">#RabbitMQ is interviewed by localhost using default user guest&#x2F;guest from 3.3.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">#grammer rabbitmqctl add_user &lt;username&gt; &lt;password&gt;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">sudo rabbitmqctl add_user admin admin  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">#give user admin (administrator) roles  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">#firewall-cmd --list-ports  rabbitmqctl set_user_tags &lt;username&gt; &lt;tag&gt; [...]  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_user_tags admin administrator  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">#set authority for user admin(start remote accession)  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">#set authority </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_permissions -p &quot;&#x2F;&quot; admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">#look for  authority </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">rabbitmqctl list_permissions -p &#x2F;  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">7.start firewall authority</span></pre></td></tr></table></figure></p><h1 id="view-open-ports-No-ports-are-open-by-default"><a href="#view-open-ports-No-ports-are-open-by-default" class="headerlink" title="view open ports(No ports are open by default)"></a>view open ports(No ports are open by default)</h1><p>firewall-cmd —list-ports #may be you shoule to install firewalld use sudo install firewalld  </p><h1 id="start-15672-port"><a href="#start-15672-port" class="headerlink" title="start 15672 port"></a>start 15672 port</h1><p>firewall-cmd —zone=public —add-port=15672/tcp —permanent  </p><h1 id="restart-firewall"><a href="#restart-firewall" class="headerlink" title="restart firewall"></a>restart firewall</h1><p>firewall-cmd —reload  </p><h1 id="Then-check-whether-the-port-is-open-the-following-shows-that-the-port-is-open"><a href="#Then-check-whether-the-port-is-open-the-following-shows-that-the-port-is-open" class="headerlink" title="Then check whether the port is open, the following shows that the port is open"></a>Then check whether the port is open, the following shows that the port is open</h1><p>firewall-cmd —list-ports #15672/tcp<br>```</p><h4 id="if-use-Google-broswer-at-windows-to-access-ubuntu-server’s-RabbitMQ-web-manager-you-need-to-modified-hosts-file-in-windows"><a href="#if-use-Google-broswer-at-windows-to-access-ubuntu-server’s-RabbitMQ-web-manager-you-need-to-modified-hosts-file-in-windows" class="headerlink" title="*if use Google broswer at windows to access ubuntu server’s RabbitMQ web manager you need to modified hosts file in windows"></a>*if use Google broswer at windows to access ubuntu server’s RabbitMQ web manager you need to modified hosts file in windows</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;RabbitMQ-Install-in-Ubuntu18-04&quot;&gt;&lt;a href=&quot;#RabbitMQ-Install-in-Ubuntu18-04&quot; class=&quot;headerlink&quot; title=&quot;RabbitMQ Install in Ubuntu18.0
      
    
    </summary>
    
    
      <category term="SoftWare" scheme="http://yoursite.com/categories/SoftWare/"/>
    
    
      <category term="SoftWare" scheme="http://yoursite.com/tags/SoftWare/"/>
    
  </entry>
  
  <entry>
    <title>Bilinear Interpolation</title>
    <link href="http://yoursite.com/2019/12/28/BilinerInterpolation/"/>
    <id>http://yoursite.com/2019/12/28/BilinerInterpolation/</id>
    <published>2019-12-28T11:41:53.000Z</published>
    <updated>2019-12-28T12:00:06.449Z</updated>
    
    <content type="html"><![CDATA[<h3 id="线性插值"><a href="#线性插值" class="headerlink" title="线性插值"></a><strong>线性插值</strong></h3><p>已知两点(x0, y0), (x1, y1)求x0和x1之间某一个位置x对应的y：</p><script type="math/tex; mode=display">\frac{y-y_0}{x-x_0} = \frac{y_1-y_0}{x_1-x_0}\quad =>\quad y = \frac{x_1-x}{x_1-x_0}y_0 + \frac{x-x_0}{x_1-x_0}y_1</script><h3 id="双线性插值"><a href="#双线性插值" class="headerlink" title="双线性插值"></a>双线性插值</h3><p><img src="/2019/12/28/BilinerInterpolation/BilinerInterpolation.png" alt="BI"></p><p>核心思想是在两个方向分别进行一次线性插值。</p><p>求未知函数 f 在点 P = (x, y) 的值，假设我们已知函数 f 在 Q11 = (x1, y1)、Q12 = (x1, y2), Q21 = (x2, y1) 以及 Q22 = (x2, y2) 四个点的值。f可以是一个像素点的像素值。首先在 x 方向进行线性插值：</p><script type="math/tex; mode=display">f(R_1)\approx \frac{x_2-x}{x_2-x_1}f(Q_{11}) + \frac{x-x_1}{x_2-x_1}f(Q_{21})\quad where R_1 = (x, y_1)</script><script type="math/tex; mode=display">f(R_2)\approx \frac{x_2-x}{x_2-x_1}f(Q_{12}) + \frac{x-x_1}{x_2-x_1}f(Q_{22})\quad where R_2 = (x, y_2)</script><p>然后在y方向进行线性插值：</p><script type="math/tex; mode=display">f(P)\approx \frac{y_2-y}{y_2-y_1}f(R_{1}) + \frac{y-y_1}{y_2-y_1}f(R_{2})\quad 将f(R_1)和f(R_2)带进来</script><p>两个技巧：</p><p>一、提高插值时对像素的充分利用</p><p>二、加快计算速度(以整数代替，使用位移&gt;&gt;实现)</p><p>下面的code参考自<a href="https://blog.csdn.net/random_repick/article/details/76165851" target="_blank" rel="noopener">C++双线性插值</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">void bilinear(cv::Mat src, cv::Mat dst)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    double scale_x &#x3D; (double)(src.cols &#x2F; dst.cols)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    double scale_y &#x3D; (double)(src.rows &#x2F; dst.rows)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    for(int i &#x3D; 0; i &lt; row; ++i) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;以ptr的方式访问dst的数据 修改p极为修改dst（指针）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        uchar *p &#x3D; dst.ptr&lt;uchar&gt;(i);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;使两个图像的几何中心重合，采样更合理</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;将dst的坐标点映射会src</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        float y &#x3D; (i + 0.5) * scale_y - 0.5;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;int下取整，相当于y值左上角的整数坐标</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        int fy &#x3D; (int)y;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;y为坐标的小数部分</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        y -&#x3D; fy;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        fy &#x3D; std::min(fy, src.rows - 2);  </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    fy &#x3D; std::max(0, fy); </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        &#x2F;&#x2F;以整数计算速度更快</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        short y1 &#x3D; (1.f - y)*2048;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        short y2 &#x3D; 2048 - y1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        for(int j &#x3D; 0; j &lt; col; ++j) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F;trick</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">            float x &#x3D; (j + 0.5) * scale_x - 0.5;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">            int fx &#x3D; (int)x;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            x -&#x3D; fx;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">            if (fx &lt; 0)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">            x &#x3D; 0, fx &#x3D; 0;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">            if (fx &gt;&#x3D; src.cols -1) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">            x &#x3D; 0, fx &#x3D; src.cols -2;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F;trick</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            short x1 &#x3D; (1.f - x) * 2048;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">            short x2 &#x3D; 2048 - x1;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">            &#x2F;&#x2F;结果右移22位抵消2048的平方</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">            int pos &#x3D; i * dst.rows + j</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">            p[pos] &#x3D; (src.at&lt;uchar&gt;(fx,fy)*x1*y1 + src.at&lt;uchar&gt;                                        (fx+1,fy)*x2*y1+src.at&lt;uchar&gt;(fx,fy+1)*x1*y2 +                                            src.at&lt;uchar&gt;(fx+1,fy+1)*x2*y2) &gt;&gt; 22;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;线性插值&quot;&gt;&lt;a href=&quot;#线性插值&quot; class=&quot;headerlink&quot; title=&quot;线性插值&quot;&gt;&lt;/a&gt;&lt;strong&gt;线性插值&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;已知两点(x0, y0), (x1, y1)求x0和x1之间某一个位置x对应的y：&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="图像处理" scheme="http://yoursite.com/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="图像插值" scheme="http://yoursite.com/tags/%E5%9B%BE%E5%83%8F%E6%8F%92%E5%80%BC/"/>
    
      <category term="Bilinear Interpolation" scheme="http://yoursite.com/tags/Bilinear-Interpolation/"/>
    
  </entry>
  
  <entry>
    <title>GBDT</title>
    <link href="http://yoursite.com/2019/12/28/GBDT/"/>
    <id>http://yoursite.com/2019/12/28/GBDT/</id>
    <published>2019-12-28T11:36:41.000Z</published>
    <updated>2019-12-28T12:03:39.256Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><h4 id="GBDT-Gradient-Boosting-Decision-Tree-的优点"><a href="#GBDT-Gradient-Boosting-Decision-Tree-的优点" class="headerlink" title="GBDT(Gradient Boosting Decision Tree)的优点"></a>GBDT(Gradient Boosting Decision Tree)的优点</h4><ol><li>既可以用于分类，也可以用于回归</li><li>可以进行特征筛选（采用树结构）</li><li>实验效果不错</li></ol><h4 id="GBDT训练过程"><a href="#GBDT训练过程" class="headerlink" title="GBDT训练过程"></a>GBDT训练过程</h4><p><img src="/2019/12/28/GBDT/GBDT.png" alt="GBDT"></p><p>gbdt通过多轮迭代产生多个足够简单的弱分类器(低方差、高偏差)，将每轮训练得到的弱分类器加权求和得到最终的分类器，并且不断的减小每轮训练过程产生的残差以实现对目标的分类或回归。</p><p><strong>上图是针对单个分类，如果多分类的话（K），同时训练k个CART树，k个树相互独立，单个树的训练过程一样</strong><br><strong>对于CART树生成的过程，重点关注那个特征最合适，这个特征对应的最优特征值切分点是多少</strong></p><p>通过对每个特征的每个特征值，计算损失值，选取其中最小分量的特征作为树的节点，最小分量对应的特征值作为最佳切分点</p><p>弱分类器一般选择<em>分类回归树</em>,必须符合CART模型；弱分类器的参数一般经过经验风险极小化来确定；损失函数(目标函数)有平方损失函数、0-1损失函数、对数损失函数等。</p><h3 id="特征选择"><a href="#特征选择" class="headerlink" title="特征选择"></a>特征选择</h3><ol><li>假设有M个特征，从中选择一个特征j作为二叉树的第一个节点</li><li>对特征j选择一个切分点m，例如，小于m为一类，大于m为一类</li><li>依次迭代，直到特征划分完为止<br><strong>这里面的关键是如何选取最优特征和该特征对应的最优切分点。这也是之后的改进算法出现的一个切入点</strong></li></ol><h3 id="如何使GBDT对数据具有非线性的拟合能力"><a href="#如何使GBDT对数据具有非线性的拟合能力" class="headerlink" title="如何使GBDT对数据具有非线性的拟合能力"></a>如何使GBDT对数据具有非线性的拟合能力</h3><ol><li>CTR预估中，工业届一般使用逻辑回归，但其本身适合处理线性可分的数据</li><li>为了让逻辑回归能够处理非线性数据，可以通过组合不同的特征</li><li>传统的人工特征组合的方式，不仅耗费人力和时间，实验效果也不是很好。因此，希望通过算法自动、高效的寻找有效的特征组合，以提升模型的效果<br><strong>2014年，Facebook提出利用gbdt去产生有效的特征组合，使用GBDT生成两棵树，通过输入X得到最终的叶子节点作为新的特征与原始特征结合，然后输入逻辑回归进行训练，得到了显著的效果提升</strong></li></ol><hr><blockquote><p>Practical Lessons from Predicting Clicks on Ads at Facebook</p></blockquote><hr><h4 id="细节请参考"><a href="#细节请参考" class="headerlink" title="细节请参考"></a>细节请参考</h4><p><a href="https://www.cnblogs.com/always-fight/p/9400346.html" target="_blank" rel="noopener">Blog-GBDT</a><br><a href="https://www.jianshu.com/p/405f233ed04b" target="_blank" rel="noopener">JianShu</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;h4 id=&quot;GBDT-Gradient-Boosting-Decision-Tree-的优点&quot;&gt;&lt;a href=&quot;#GBDT-Gradient
      
    
    </summary>
    
    
      <category term="Machine Learning" scheme="http://yoursite.com/categories/Machine-Learning/"/>
    
    
      <category term="Machine Learning" scheme="http://yoursite.com/tags/Machine-Learning/"/>
    
      <category term="GBDT" scheme="http://yoursite.com/tags/GBDT/"/>
    
  </entry>
  
</feed>
